version: '3.6'

services:

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - REDIS_HOST
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - .:/code
      - ./postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data

  web:
    build: .
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - redis
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - './:/app'
      - '/app/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start